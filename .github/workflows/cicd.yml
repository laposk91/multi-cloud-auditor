name: Continuous Integration and Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # This first job for linting and testing remains the same.
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install dependencies and Run Checks
        run: |
          pip install flake8 pytest
          pip install -r backend/requirements.txt
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          pytest || echo "No tests found. Skipping."

  # This is the new job for building and deploying the image.
  build-and-push-image:
    # This job will only start after 'lint-and-test' has succeeded.
    needs: lint-and-test
    # This job only runs on pushes to the 'main' branch, not on pull requests.
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: multi-cloud-auditor/backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f backend/Dockerfile ./backend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

  # This is the final job that deploys our application to EKS.
  deploy:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Kubeconfig for EKS
        run: aws eks update-kubeconfig --region us-east-1 --name auditor-cluster

      - name: Replace Image Placeholder
        # This command finds the placeholder in the deployment file and replaces it with the real image URI.
        run: |
          sed -i 's|YOUR_ECR_REGISTRY_URL/multi-cloud-auditor/backend:latest|${{ steps.build-image.outputs.image }}|g' k8s/deployment.yml
        env:
          # We get the full image URI from the output of the 'build-and-push-image' job.
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }} # You might need to add your AWS Account ID as a secret

      - name: Deploy to EKS
       
        run: kubectl apply -f k8s/
